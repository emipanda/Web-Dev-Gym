// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_Dev_Proj_Gym.Data;

namespace Web_Dev_Proj_Gym.Migrations
{
    [DbContext(typeof(Web_Dev_Proj_GymContext))]
    partial class Web_Dev_Proj_GymContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BranchEmployee", b =>
                {
                    b.Property<int>("EmployeeBranchListID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeListID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeBranchListID", "EmployeeListID");

                    b.HasIndex("EmployeeListID");

                    b.ToTable("BranchEmployee");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.Branch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfEmployees")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.Customer", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.CustomerTrainings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChosenLessonID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerUserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timing")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrainingLocationID")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingProgramID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ChosenLessonID");

                    b.HasIndex("CustomerUserName");

                    b.HasIndex("TrainingLocationID");

                    b.HasIndex("TrainingProgramID");

                    b.ToTable("CustomerTrainings");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.Lesson", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("CalorieBurn")
                        .HasColumnType("int");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("int");

                    b.Property<int?>("LessonTrainerID")
                        .HasColumnType("int");

                    b.Property<string>("LessonType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.HasIndex("LessonTrainerID");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.TrainingProgram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProgramDuration")
                        .HasColumnType("int");

                    b.Property<string>("ProgramPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeightGoal")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("TrainingProgram");
                });

            modelBuilder.Entity("BranchEmployee", b =>
                {
                    b.HasOne("Web_Dev_Proj_Gym.Models.Branch", null)
                        .WithMany()
                        .HasForeignKey("EmployeeBranchListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Dev_Proj_Gym.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.CustomerTrainings", b =>
                {
                    b.HasOne("Web_Dev_Proj_Gym.Models.Lesson", "ChosenLesson")
                        .WithMany()
                        .HasForeignKey("ChosenLessonID");

                    b.HasOne("Web_Dev_Proj_Gym.Models.Customer", null)
                        .WithMany("MyTrainings")
                        .HasForeignKey("CustomerUserName");

                    b.HasOne("Web_Dev_Proj_Gym.Models.Branch", "TrainingLocation")
                        .WithMany()
                        .HasForeignKey("TrainingLocationID");

                    b.HasOne("Web_Dev_Proj_Gym.Models.TrainingProgram", null)
                        .WithMany("ProgramsTrainingsList")
                        .HasForeignKey("TrainingProgramID");

                    b.Navigation("ChosenLesson");

                    b.Navigation("TrainingLocation");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.Lesson", b =>
                {
                    b.HasOne("Web_Dev_Proj_Gym.Models.Branch", null)
                        .WithMany("LessonList")
                        .HasForeignKey("BranchID");

                    b.HasOne("Web_Dev_Proj_Gym.Models.Employee", "LessonTrainer")
                        .WithMany("EmployeeLessonList")
                        .HasForeignKey("LessonTrainerID");

                    b.Navigation("LessonTrainer");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.Branch", b =>
                {
                    b.Navigation("LessonList");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.Customer", b =>
                {
                    b.Navigation("MyTrainings");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.Employee", b =>
                {
                    b.Navigation("EmployeeLessonList");
                });

            modelBuilder.Entity("Web_Dev_Proj_Gym.Models.TrainingProgram", b =>
                {
                    b.Navigation("ProgramsTrainingsList");
                });
#pragma warning restore 612, 618
        }
    }
}
